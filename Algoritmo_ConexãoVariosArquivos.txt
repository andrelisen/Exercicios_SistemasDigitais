Como faz para ter vários arquivos .vhd e realizar a conexão de todos?
Passo 1) Criar um arquivo novo do tipo .vhd em seu projeto
Passo 2) Declare as bibliotecas utilizadas
	Exemplo: library IEEE;
		 use IEEE.std_logic_1164.all;
Observação) Não há arquitetura nem entidade neste arquivo
Passo 3) Crie um pacote com o mesmo nome dado ao arquivo .vhd criado
	Exemplo: package general_components is
Passo 4) Para cada entidade do seu projeto, crie um componente
	Exemplo: component DataRegister is
Passo 5) Faça a declaração de todas as portas + elementos genéricos declarados nas entidades contidas no projeto
	Exemplo:generic (data_width:integer);
		  port (
			  Din: in std_logic_vector(data_width-1 downto 0);
	     		  Dout: out std_logic_vector(data_width-1 downto 0);
	      		  clk, enable: in std_logic);
		end component DataRegister;
Passo 6: Por fim, concluímos a definição do pacote
	end package;
-----------------------------------------------------------------------------------------------------------------
Para utilizar entidades de outros arquivos como resposta
	Exemplo:
		--count: faz o cálculo aqui
		count_en <= t(1) or t(3);
		s1: subtractor4 port map (a=>count , b=>c1 , c=>count_less); 
		count_in <= c10 when (t(1)='1')
			         else count_less;
		----------Coloca resultado abaixo------------
		count_reg: DataRegister
			 generic map(data_width=>4)
			  port map(
				Din=>count_in,
			        Dout=>count,
				Enable=>count_en,
				clk=>clk);

>>Mas o que o DataRegister faz?
	Exemplo: 
		entity DataRegister is
			generic (data_width:integer);
			port (
				Din: in std_logic_vector(data_width-1 downto 0);
	      			Dout: out std_logic_vector(data_width-1 downto 0);
	      			clk, enable: in std_logic);
		end entity;
		architecture Behave of DataRegister is
			begin
   			 process(clk)
   			 begin
       			   if(clk'event and (clk  = '1')) then
           			if(enable = '1') then
               			Dout <= Din;
           			end if;
       			   end if;
    			 end process;
	        end Behave;

>>Além disso, precisamos declarar a utilização do pacote nos arquivos usando o seguinte comando:
		LIBRARY work ;
		USE work.mux4to1_package.all; 